#namespace ListsMembers
#description Provides a set of methods for the wrapper of GET/POST lists/members.

endpoint Cursored<User> List : Get lists/members
{
	description
	{
		Returns the members of the specified list.
		Private list members will only be shown if the authenticated user owns the specified list.
	}
	returns
	{
		The users.
	}
	params
	{
		required long list_id
		optional int count
		semi-optional long cursor
		optional bool include_entities
		optional bool skip_status
	}
}

endpoint Cursored<User> List : Get lists/members
{
	with
	{
		OmitExcept=static,asyncstatic
	}
	description
	{
		Returns the members of the specified list.
		Private list members will only be shown if the authenticated user owns the specified list.
	}
	returns
	{
		The users.
	}
	params
	{
		required string slug
		either string owner_screen_name
		either long owner_id
		optional int count
		semi-optional long cursor
		optional bool include_entities
		optional bool skip_status
	}
}

endpoint UserResponse Show : Get lists/members/show
{
	description
	{
		Check if the specified user is a member of the specified list.
	}
	returns
	{
		The user.
	}
	params
	{
		required long list_id
		either long user_id
		either string screen_name
		optional bool include_entities
		optional bool skip_status
	}
}

endpoint UserResponse Show : Get lists/members/show
{
	with
	{
		OmitExcept=static,asyncstatic
	}
	description
	{
		Check if the specified user is a member of the specified list.
	}
	returns
	{
		The user.
	}
	params
	{
		required string slug
		either string owner_screen_name
		either long owner_id
		required long user_id
		optional bool include_entities
		optional bool skip_status
	}
}

endpoint UserResponse Show : Get lists/members/show
{
	with
	{
		OmitExcept=static,asyncstatic
	}
	description
	{
		Check if the specified user is a member of the specified list.
	}
	returns
	{
		The user.
	}
	params
	{
		required string slug
		either string owner_screen_name
		either long owner_id
		required string screen_name
		optional bool include_entities
		optional bool skip_status
	}
}

endpoint ListResponse Create : Post lists/members/create
{
	description
	{
		Add a member to a list. The authenticated user must own the list to be able to add members to it.
		Note that lists cannot have more than 5,000 members.
	}
	returns
	{
		The list.
	}
	params
	{
		required long list_id
		either long user_id
		either string screen_name
	}
}

endpoint ListResponse Create : Post lists/members/create
{
	with
	{
		OmitExcept=static,asyncstatic
	}
	description
	{
		Add a member to a list. The authenticated user must own the list to be able to add members to it.
		Note that lists cannot have more than 5,000 members.
	}
	returns
	{
		The list.
	}
	params
	{
		required string slug
		either string owner_screen_name
		either long owner_id
		required long user_id
	}
}

endpoint ListResponse Create : Post lists/members/create
{
	with
	{
		OmitExcept=static,asyncstatic
	}
	description
	{
		Add a member to a list. The authenticated user must own the list to be able to add members to it.
		Note that lists cannot have more than 5,000 members.
	}
	returns
	{
		The list.
	}
	params
	{
		required string slug
		either string owner_screen_name
		either long owner_id
		required string screen_name
	}
}

endpoint ListResponse CreateAll : Post lists/members/create_all
{
	description
	{
		Adds multiple members to a list, by specifying a comma-separated list of member ids or screen names. The authenticated user must own the list to be able to add members to it.
		Note that lists can’t have more than 5,000 members, and you are limited to adding up to 100 members to a list at a time with this method.
		Please note that there can be issues with lists that rapidly remove and add memberships. Take care when using these methods such that you are not too rapidly switching between removals and adds on the same list.
	}
	returns
	{
		The list.
	}
	params
	{
		required long list_id
		either IEnumerable<long> user_id
		either IEnumerable<string> screen_name
	}
}

endpoint ListResponse CreateAll : Post lists/members/create_all
{
	with
	{
		OmitExcept=static,asyncstatic
	}
	description
	{
		Adds multiple members to a list, by specifying a comma-separated list of member ids or screen names. The authenticated user must own the list to be able to add members to it.
		Note that lists can’t have more than 5,000 members, and you are limited to adding up to 100 members to a list at a time with this method.
		Please note that there can be issues with lists that rapidly remove and add memberships. Take care when using these methods such that you are not too rapidly switching between removals and adds on the same list.
	}
	returns
	{
		The list.
	}
	params
	{
		required string slug
		either string owner_screen_name
		either long owner_id
		required IEnumerable<long> user_id
	}
}

endpoint ListResponse CreateAll : Post lists/members/create_all
{
	with
	{
		OmitExcept=static,asyncstatic
	}
	description
	{
		Adds multiple members to a list, by specifying a comma-separated list of member ids or screen names. The authenticated user must own the list to be able to add members to it.
		Note that lists can’t have more than 5,000 members, and you are limited to adding up to 100 members to a list at a time with this method.
		Please note that there can be issues with lists that rapidly remove and add memberships. Take care when using these methods such that you are not too rapidly switching between removals and adds on the same list.
	}
	returns
	{
		The list.
	}
	params
	{
		required string slug
		either string owner_screen_name
		either long owner_id
		required IEnumerable<string> screen_name
	}
}

endpoint ListResponse Destroy : Post lists/members/destroy
{
	description
	{
		Removes the specified member from the list. The authenticated user must be the list’s owner to remove members from the list.
	}
	returns
	{
		The list.
	}
	params
	{
		required long list_id
		either long user_id
		either string screen_name
	}
}

endpoint ListResponse Destroy : Post lists/members/destroy
{
	with
	{
		OmitExcept=static,asyncstatic
	}
	description
	{
		Removes the specified member from the list. The authenticated user must be the list’s owner to remove members from the list.
	}
	returns
	{
		The list.
	}
	params
	{
		required string slug
		either string owner_screen_name
		either long owner_id
		required long user_id
	}
}

endpoint ListResponse Destroy : Post lists/members/destroy
{
	with
	{
		OmitExcept=static,asyncstatic
	}
	description
	{
		Removes the specified member from the list. The authenticated user must be the list’s owner to remove members from the list.
	}
	returns
	{
		The list.
	}
	params
	{
		required string slug
		either string owner_screen_name
		either long owner_id
		required string screen_name
	}
}

endpoint ListResponse DestroyAll : Post lists/members/destroy_all
{
	description
	{
		Removes multiple members from a list, by specifying a comma-separated list of member ids or screen names. The authenticated user must own the list to be able to remove members from it.
		Note that lists can’t have more than 500 members, and you are limited to removing up to 100 members to a list at a time with this method.
		Please note that there can be issues with lists that rapidly remove and add memberships. Take care when using these methods such that you are not too rapidly switching between removals and adds on the same list.
	}
	returns
	{
		The list.
	}
	params
	{
		required long list_id
		either IEnumerable<long> user_id
		either IEnumerable<string> screen_name
	}
}

endpoint ListResponse DestroyAll : Post lists/members/destroy_all
{
	with
	{
		OmitExcept=static,asyncstatic
	}
	description
	{
		Removes multiple members from a list, by specifying a comma-separated list of member ids or screen names. The authenticated user must own the list to be able to remove members from it.
		Note that lists can’t have more than 500 members, and you are limited to removing up to 100 members to a list at a time with this method.
		Please note that there can be issues with lists that rapidly remove and add memberships. Take care when using these methods such that you are not too rapidly switching between removals and adds on the same list.
	}
	returns
	{
		The list.
	}
	params
	{
		required string slug
		either string owner_screen_name
		either long owner_id
		required IEnumerable<long> user_id
	}
}

endpoint ListResponse DestroyAll : Post lists/members/destroy_all
{
	with
	{
		OmitExcept=static,asyncstatic
	}
	description
	{
		Removes multiple members from a list, by specifying a comma-separated list of member ids or screen names. The authenticated user must own the list to be able to remove members from it.
		Note that lists can’t have more than 500 members, and you are limited to removing up to 100 members to a list at a time with this method.
		Please note that there can be issues with lists that rapidly remove and add memberships. Take care when using these methods such that you are not too rapidly switching between removals and adds on the same list.
	}
	returns
	{
		The list.
	}
	params
	{
		required string slug
		either string owner_screen_name
		either long owner_id
		required IEnumerable<string> screen_name
	}
}
